name: build

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "*/30 * * * *"   # every 30 minutes (adjust if you like)
  workflow_dispatch:

# Needed so the workflow can push events.json back to the repo
permissions:
  contents: write

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0           # required for pull --rebase

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Ensure inbox folder
        run: mkdir -p data/inbox

      # Pull newest CSV attachment from Gmail (non-fatal if nothing found)
      - name: Fetch latest CSV from Gmail
        env:
          IMAP_PASS: ${{ secrets.IMAP_PASS }}   # Gmail App Password (16 chars)
          OUT_CSV: data/inbox/latest.csv
        run: |
          set -e
          node scripts/fetch_email.js || echo "fetch_email failed or no CSV; continuing"

      # Convert CSV -> events.json according to your business rules
      - name: Transform CSV -> events.json
        run: node scripts/transform.mjs

      # Rebase-safe commit of events.json
      - name: Commit events.json (rebase-safe)
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stash any local changes (including untracked) before pulling
          git add -A
          git stash push --include-untracked -m "pre-rebase" || true

          # Rebase onto the latest remote main
          git fetch origin main
          git pull --rebase origin main

          # Re-apply stashed changes (if any)
          git stash pop || true

          # Only stage and commit events.json
          git add events.json

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update events.json [skip ci]"
            git push origin HEAD:main
          fi
